@import "../../css/units.css";
@import "../../css/colors.css";
@import "../../css/z-index.css";
.page-wrapper {
  height: 100%;
  position: relative;
}

.body-wrapper {
  height: calc(100% - $menu-bar-height);
  background-color: $ui-primary;
}

.body-wrapper * {
  box-sizing: border-box;
}

.flex-wrapper {
  display: flex;
  /*
        Make 2 columns:
        a) for the blocks + workspace panes, and
        b) for combined stage menu + stage + sprite/stage selectors
    */
  flex-direction: row;
  height: 100%;
  /*
        Stop scrollbar popping in and out from scratch-blocks border issue
        https://github.com/LLK/scratch-gui/issues/318
    */
  /* overflow-y: hidden; */
  overflow: hidden;
}

.editor-wrapper {
  flex-basis: 600px;
  flex-grow: 1;
  flex-shrink: 0;
  position: relative;
  display: flex;
  flex-direction: column;
}

.device-and-stage-wrapper {
  height: 100%;
  display: flex;
  flex-direction: column;
  background: rgba(255, 255, 255, 1);
  position: relative;
}

.workspace-wrapper {
  height: 100%;
  display: flex;
  flex-grow: 1;
  position: relative;
}

.customs-and-sound-wrapper {
  width: 100%;
  display: flex;
  flex-grow: 1;
  z-index: 0;

  user-select: none;
}

.tab-list {
  height: $stage-menu-height;
  width: auto;
  /* Match width of the toolbox */
  display: flex;
  align-items: flex-end;
  flex-shrink: 0;
  /* font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; */
  font-weight: 500;
  font-size: 0.80rem;
  /* Overrides for react-tabs styling */
  margin: 0 !important;
  border-bottom: 0;
}

.tab {
  flex-grow: 1;
  height: 100%;
  margin-bottom: 0;
  border-radius: 0;
  border-top: none;
  border-left: none;
  border-right: none;
  border-bottom: 1px solid rgba(232, 239, 247, 1);
  background: rgba(255, 255, 255, 1);
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  white-space: nowrap;
  font-size: 0.88rem;
  font-weight: 500;
  color: rgba(171, 185, 198, 1);
  bottom: 0;
}

.tab:hover {
  /* background-color: $ui-primary; */
}

.tab.is-selected {
  color: rgba(81, 221, 212, 1);
  border-bottom: 1px solid rgba(81, 221, 212, 1);
  z-index: 4;
  /* Make sure selected is always above */
}

/* .tab img {
    width: 1.375rem;
    filter: grayscale(100%);
}

[dir="ltr"] .tab img {
    margin-right: 0.125rem;
}

[dir="rtl"] .tab img {
    margin-left: 0.125rem;
} */

/* mirror blocks and sound tab icons */

/* [dir="rtl"] .tab:nth-of-type(1) img {
    transform: scaleX(-1);
}

[dir="rtl"] .tab:nth-of-type(3) img {
    transform: scaleX(-1);
}

.tab.is-selected img {
    filter: none;
} */

/* Tab style overrides from react-tabs */

.tab.is-selected:after {
  display: none;
}

.tab.is-selected:focus {
  outline: none;
  box-shadow: none;
  border-color: rgba(81, 221, 212, 1);
}

.tab.is-selected:focus:after {
  display: none;
}

/* Body of the tabs */

.tabs {
  position: relative;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.tab-panel {
  position: relative;
  flex-grow: 1;
  display: none;
}

.tab-panel.is-selected {
  display: flex;
}

.blocks-wrapper {
  flex-grow: 1;
  position: relative;
}

.stage-and-target-wrapper {
  /*
        Makes rows for children:
          1) stage menu
          2) stage
          3) sprite/stage selectors
        Only reason we need this, is so .targetWrapper, which holds the selectors,
        goes to full vertical height of the window
    */
  display: flex;
  flex-direction: column;
  /* pad entire wrapper to the left and right; allow children to fill width */
  padding: 0.714rem 0.714rem 0 0.714rem;
  background: rgba(246, 249, 252, 1);

  user-select: none;
}

.stage-and-target-wrapper.large {
  /* Fix the max width to max large stage size (defined in layout_constants.js) + gutter size */
  max-width: calc(480px + calc($space * 2));
}

.stage-and-target-wrapper.large-constrained {
  /* Fix the max width to max largeConstrained stage size (defined in layout_constants.js) + gutter size */
  max-width: calc(408px + calc($space * 2));
}

.stage-and-target-wrapper.small {
  /* Fix the max width to max small stage size (defined in layout_constants.js) + gutter size */
  max-width: calc(240px + calc($space * 2));
}

.target-wrapper {
  display: flex;
  flex-grow: 1;
  flex-basis: 0;
  padding-top: $space;
  min-height: 0;
  /* this makes it work in Firefox */
  /*
        For making the sprite-selector a scrollable pane
        @todo: Not working in Safari
    */
  /* TODO this also breaks the thermometer menu */
  /* overflow: hidden; */
}

.extension-button-container {
  position: absolute;

  left: 0;
  right: 0;
  bottom: 0;

  width: 6.94rem;
  height: 4.31rem;

  background:rgba(255,255,255,1);
  border-top:1px solid rgba(232,239,247,1);
  border-bottom:1px solid rgba(232,239,247,1);
  border-left:1px solid rgba(232,239,247,1);

  z-index: $z-index-extension-button;
}

.extension-button-container img {
  width:2.5rem;
  margin-bottom: 0.26rem;
}

.extension-shadow{
  width: 6rem;
  position: absolute;
  top: 6px;
  right: 0;
  bottom: 0;
  box-shadow: 0rem 0rem 0.5rem 0rem rgba(0, 48, 104, 0.1);
}

.extension-write-wrap{
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  background:rgba(255,255,255,1);

  display: flex;
  
  flex-direction: column;

  justify-content: center;
  align-items: center;

  font-size: 0.75rem;
  font-weight: 400;
  color: rgba(81,221,212,1);

  cursor: pointer;
}


/* $fade-out-distance: 15px;
.extension-button-container:before {
  content: "";
  position: absolute;
  top: calc(calc(-1 * $fade-out-distance) - 1px);
  left: -1px;
  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
  height: $fade-out-distance;
  width: calc(100% + 0.5px);
} */

.extension-button {
  background: none;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.extension-button-icon {
  width: 1.75rem;
  height: 1.75rem;
}

[dir="rtl"] .extension-button-icon {
  transform: scaleX(-1);
}

.extension-button>div {
  margin-top: 0;
}

/* Menu */

.menu-bar-position {
  position: relative;
  z-index: $z-index-menu-bar;
}

/* Alerts */

.alerts-container {
  width: 448px;
  z-index: $z-index-alerts;
  left: 0;
  right: 0;
  margin: auto;
  position: absolute;
  margin-top: 53px;
}

.large {
  width: calc(22.8rem + calc($space * 2));
}

.large-constrained {
  width: calc(22.8rem + calc($space * 2));
}

.small {
  width: calc(15.0rem + calc($space * 2));
}

.functional-zone-obscuration {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(242, 247, 251, 1);
  opacity: 0.9;
  z-index: 100;
}

.gui-upload-wrapper{
  position: absolute;
  right: 15px;
  bottom: 15px;
}